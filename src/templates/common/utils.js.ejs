import { exec } from 'child_process'

/**
 * Execute simple shell command (async wrapper).
 * @param {String} cmd
 * @return {Object} { stdout: String, stderr: String }
 */
export const sh = async (cmd: string): Promise<any> => {
  return new Promise((resolve, reject) => {
    exec(cmd, (err, stdout, stderr) => {
      if (err) {
        reject(err)
      } else {
        resolve({ stdout, stderr })
      }
    })
  })
}

/**
 * Convert 1 '1' and 'true'to true and 0 '0' 'false' null and undefined to false
 * @param value
 * @returns boolean
 */
export const toBoolean = (value: string | number | boolean | null | undefined): boolean => {
  if (value === 'true') {
    return true
  }

  return typeof value === 'string'
    ? !!+value // we parse string to integer first
    : !!value
}

/**
 * Create ID uniqueness
 * @returns 'a255-81495ee59589-495e'
 */
export const uid = () => {
  const s4 = () => Math.floor((1 + Math.random()) * 0x10000)
    .toString(16)
    .substring(1)
  return s4() + '-' + s4() + s4() + s4() + '-' + s4()
}
